<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Aryal Offline App</title>
<style>
body {
font-family: Arial, sans-serif;
background-color: #2c2c2c;
color: #ffffff;
display: flex;
flex-direction: column;
align-items: center;
padding: 20px;
}
#login-signup, #meetingArea, #messagingArea, #profileArea {
display: none;
border: 1px solid #ffffff;
padding: 20px;
margin-top: 20px;
width: 300px;
background-color: #444;
}
button {
margin-top: 10px;
}
#participants {
margin-top: 10px;
border: 1px solid #ffffff;
padding: 5px;
height: 100px;
overflow-y: scroll;
}
#messages {
margin-top: 10px;
border: 1px solid #ffffff;
padding: 5px;
height: 100px;
overflow-y: scroll;
}
#chatInput {
width: 100%;
}
#bioInput, #statusInput {
width: 100%;
margin-top: 5px;
}
#purpleDragon {
display: none;
position: absolute;
right: 20px;
bottom: 20px;
width: 100px;
}
</style>
</head>
<body>

<h1>Welcome to Aryal</h1>

<div id="login-signup">
<form id="signupForm">
<h2>Sign Up</h2>
<input type="email" id="signupEmail" placeholder="Email" required>
<input type="password" id="signupPassword" placeholder="Password" required>
<button type="submit">Sign Up</button>
</form>
<form id="loginForm">
<h2>Login</h2>
<input type="email" id="loginEmail" placeholder="Email" required>
<input type="password" id="loginPassword" placeholder="Password" required>
<button type="submit">Login</button>
</form>
</div>

<div id="profileArea">
<h2>Profile</h2>
<p id="profileEmail"></p>
<textarea id="bioInput" placeholder="Bio" rows="3"></textarea>
<textarea id="statusInput" placeholder="Status" rows="2"></textarea>
<button id="updateProfile">Update Profile</button>
<button id="viewFriends">View Friends</button>
<button id="logoutButton">Logout</button>
</div>

<div id="meetingArea">
<h2>Meeting Room</h2>
<button id="startMeetingButton">Start Meeting</button>
<button id="endMeetingButton" style="display: none;">End Meeting</button>
<div id="participants"><strong>Participants:</strong> <span id="participantCount">0</span></div>
<div id="chatArea">
<div id="messages"></div>
<input type="text" id="chatInput" placeholder="Type your message...">
<button id="sendMessage">Send</button>
</div>
</div>

<div id="messagingArea">
<h2>Messaging</h2>
<div id="friendsList"></div>
<button id="addFriendButton">Add Friend</button>
<button id="removeFriendButton">Remove Friend</button>
<button id="logoutFromMessaging">Logout</button>
</div>

<img id="purpleDragon" src="purple_dragon.png" alt="Purple Dragon" onclick="showGuide()">

<script>
let users = JSON.parse(localStorage.getItem('users')) || [];
let currentUser = null;
let friends = JSON.parse(localStorage.getItem('friends')) || [];
let meetingActive = false;

document.getElementById('signupForm').addEventListener('submit', function (e) {
e.preventDefault();
const email = document.getElementById('signupEmail').value;
const password = document.getElementById('signupPassword').value;
signupUser(email, password);
});

document.getElementById('loginForm').addEventListener('submit', function (e) {
e.preventDefault();
const email = document.getElementById('loginEmail').value;
const password = document.getElementById('loginPassword').value;
loginUser(email, password);
});

document.getElementById('logoutButton').addEventListener('click', function () {
logoutUser();
});

document.getElementById('sendMessage').addEventListener('click', function () {
const message = document.getElementById('chatInput').value;
sendMessage(message);
});

document.getElementById('updateProfile').addEventListener('click', function () {
updateProfile();
});

document.getElementById('startMeetingButton').addEventListener('click', function () {
startMeeting();
});

document.getElementById('endMeetingButton').addEventListener('click', function () {
endMeeting();
});

document.getElementById('addFriendButton').addEventListener('click', function () {
const friendEmail = prompt("Enter the friend's email:");
if (friendEmail) {
addFriend(friendEmail);
}
});

document.getElementById('removeFriendButton').addEventListener('click', function () {
const friendEmail = prompt("Enter the friend's email to remove:");
if (friendEmail) {
removeFriend(friendEmail);
}
});

function signupUser(email, password) {
if (users.find(user => user.email === email)) {
alert('User already exists');
return;
}
users.push({ email, password });
localStorage.setItem('users', JSON.stringify(users));
alert('User registered successfully');
}

function loginUser(email, password) {
const user = users.find(user => user.email === email && user.password === password);
if (user) {
currentUser = user;
document.getElementById('login-signup').style.display = 'none';
document.getElementById('profileArea').style.display = 'block';
document.getElementById('profileEmail').innerText = Email: ${user.email};
document.getElementById('meetingArea').style.display = 'block';
document.getElementById('messagingArea').style.display = 'block';
loadFriends();
} else {
alert('Invalid credentials');
}
}

function logoutUser() {
currentUser = null;
document.getElementById('login-signup').style.display = 'block';
document.getElementById('profileArea').style.display = 'none';
document.getElementById('meetingArea').style.display = 'none';
document.getElementById('messagingArea').style.display = 'none';
clearChat();
clearParticipants();
}

function startMeeting() {
meetingActive = true;
updateParticipantCount();
document.getElementById('startMeetingButton').style.display = 'none';
document.getElementById('endMeetingButton').style.display = 'block';
alert("Meeting started. You can now chat!");
}

function endMeeting() {
meetingActive = false;
clearChat();
clearParticipants();
document.getElementById('startMeetingButton').style.display = 'block';
document.getElementById('endMeetingButton').style.display = 'none';
alert("Meeting ended.");
}

function sendMessage(message) {
if (!meetingActive) {
alert("Please start the meeting first.");
return;
}
if (message.trim() === '') return;
const messagesDiv = document.getElementById('messages');
messagesDiv.innerHTML += <div>${currentUser.email}: ${message}</div>;
document.getElementById('chatInput').value = '';
}

function updateProfile() {
const bio = document.getElementById('bioInput').value;
const status = document.getElementById('statusInput').value;
alert(Profile Updated!\nBio: ${bio}\nStatus: ${status});
}

function loadFriends() {
friends = JSON.parse(localStorage.getItem('friends')) || [];
updateFriendsList();
}

function addFriend(friendEmail) {
if (!friends.includes(friendEmail)) {
friends.push(friendEmail);
localStorage.setItem('friends', JSON.stringify(friends));
alert('Friend added!');
updateFriendsList();
} else {
alert('Friend already in list.');
}
}

function removeFriend(friendEmail) {
friends = friends.filter(email => email !== friendEmail);
localStorage.setItem('friends', JSON.stringify(friends));
alert('Friend removed!');
updateFriendsList();
}

function updateFriendsList() {
const friendsListDiv = document.getElementById('friendsList');
friendsListDiv.innerHTML = '<strong>Friends:</strong>';
friends.forEach(friend => {
friendsListDiv.innerHTML += <div>${friend}</div>;
});
}

function clearChat() {
document.getElementById('messages').innerHTML = '';
}

function clearParticipants() {
document.getElementById('participants').innerHTML = '<strong>Participants:</strong> <span id="participantCount">0</span>';
}

function updateParticipantCount() {
const participantCount = document.getElementById('participantCount');
participantCount.innerText = parseInt(participantCount.innerText) + 1;
}

function showGuide() {
alert("Welcome! I am the Purple Dragon. Here's how to use the app:\n- Create your account\n- Start a meeting\n- Chat with friends\n- Manage your profile\n- And much more!");
}

// Automatically show the guide for first-time users
if (!localStorage.getItem('guideShown')) {
document.getElementById('purpleDragon').style.display = 'block';
localStorage.setItem('guideShown', 'true');
}
</script>

</body>
</html>